name: CI/CD Pipeline to EC2 with Docker Hub

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        if [ -d "tests" ]; then
          pytest
        else
          echo "No tests directory found."
        fi

    - name: Configure SSH Key
      run: |
        echo "${{ secrets.EC2_KEY }}" > /tmp/ec2_key.pem
        chmod 600 /tmp/ec2_key.pem

    - name: Log in to Docker Hub
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

    - name: Deploy to EC2
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
        DOCKER_REPOSITORY: ${{ secrets.DOCKER_REPOSITORY }}
      run: |
        echo "Deploying application to EC2 instance at $EC2_HOST"
        ssh -i /tmp/ec2_key.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << 'EOF'
          # Set up directory and pull latest code
          cd /home/${EC2_USER:-ubuntu}/app || mkdir -p /home/${EC2_USER:-ubuntu}/app && cd /home/${EC2_USER:-ubuntu}/app
          git pull origin main

          # Build Docker image
          sudo docker build -f Dockerfile.dockerfile -t $DOCKER_REPOSITORY:latest .

          # Push Docker image to Docker Hub
          sudo docker push $DOCKER_REPOSITORY:latest

          # Run Docker container
          sudo docker stop aryan4117/fitness-app || true
          sudo docker rm aryan4117/fitness-app || true
          sudo docker run -d --name aryan4117/fitness-app -p 80:5000 $DOCKER_REPOSITORY:latest
        EOF
