name: CI/CD Pipeline with SonarQube and Docker

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Java (Required for SonarQube)
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: Install Sonar Scanner
      run: |
        # Download and extract SonarQube Scanner
        curl -sSLo sonar-scanner-cli.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
        unzip sonar-scanner-cli.zip -d $HOME
        echo "$HOME/sonar-scanner-4.8.0.2856-linux/bin" >> $GITHUB_PATH
        sonar-scanner --version # Verify installation

    - name: Run SonarQube Analysis
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      run: |
        sonar-scanner \
          -Dsonar.projectKey=your_project_key \
          -Dsonar.sources=. \
          -Dsonar.host.url=$SONAR_HOST_URL \
          -Dsonar.login=$SONAR_TOKEN

    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        if [ -d "tests" ]; then
          pytest
        else
          echo "No tests directory found."
        fi

    - name: Configure SSH Key
      run: |
        echo "${{ secrets.EC2_KEY }}" > /tmp/ec2_key.pem
        chmod 600 /tmp/ec2_key.pem

    - name: Log in to Docker Hub
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

    - name: Build Docker Image
      run: |
        docker build --no-cache -t ${{ secrets.DOCKER_REPOSITORY }}:latest -f Dockerfile .

    - name: Push Docker Image to Docker Hub
      run: |
        docker push ${{ secrets.DOCKER_REPOSITORY }}:latest

    - name: Deploy to EC2
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
        DOCKER_REPOSITORY: ${{ secrets.DOCKER_REPOSITORY }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        ssh -i /tmp/ec2_key.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST <<EOF
          export DOCKER_REPOSITORY="$DOCKER_REPOSITORY"
          export DOCKER_USERNAME="$DOCKER_USERNAME"
          export DOCKER_PASSWORD="$DOCKER_PASSWORD"
          echo "$DOCKER_PASSWORD" | sudo docker login -u "$DOCKER_USERNAME" --password-stdin
          sudo docker pull "$DOCKER_REPOSITORY:latest"
          if sudo docker ps -a --format '{{.Names}}' | grep -Eq '^app-container$'; then
            sudo docker stop app-container
            sudo docker rm app-container
          fi
          sudo docker run -d --name app-container -p 80:5000 "$DOCKER_REPOSITORY:latest"
        EOF
